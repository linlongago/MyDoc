GitHub 笔记
将本地的文件都还原到最新
git reset HEAD
这样的话，我们就可以回到开始了。但这个操作好像仅限于在master之类的分支上，如果是在 
一个新的远程分支，就会出现： 
Unstaged changes after reset 
解决方法
git add .//自动把你当前目录所有修改过的文件添加
git reset --hard

GitHub 学习笔记(Git Shell)

创建一个仓库 :
mkdir <filename> 			//创建一个文件件
cd <filename> 				//进入文件夹
git init					//将文件夹初始化成GIT可以管理的仓库
添加文件到GIT仓库
git add <file> 				//注意，文件名要写全，包括扩展名（不包括删除）
git add -A 					//添加所有文件，修改，删除，添加 stages All
git add . 		  			// stages new and modified, without deleted
git add -u 					//stages modified and deleted, without new 
git commit -m "<日志>"
git status 					//查看当前git的状态
git diff <file>				//对比查看文件修改内柔
git reset --hard <commit_id>//还原到指定的版本 同时清除了暂缓区的内容
git log						//查看提交历史 以便要回滚到那个版本
git log -p					//查看提交历史并查看修改内容 集成了diff
git reflog					//查看命令历史 以便确定要回到未来的哪个版本
git checkout -- <file>		//撤销工作区的修改消息
git rm <file>					//删除文件 工作区删除了文件 利用这个命令将删除操作记录暂缓区 再commit到仓库
rm <firle>						//删除工作区的文件
git remote add origin git@server-name:path/repo-name.git	//关联一个远程库 可以直接替换成github网站上面的地址
git push -u origin master 	//第一次推送master分支的所有内容
git push origin master 		//推送最新修改
git clone git@github.com:michaelliao/gitskills.git	//从github上面克隆下来自己的仓库 注意名字根据自己定义
git branch	//查看分支
git branch <name>	//创建分支
git checkout <name>		//切换分支
git checkout -b <name>	//创建+切换分支
git merge <name>	//合并某分支到当前分支
git branch -d <name>	//删除分支
git fetch	//获取远程服务器最新版本
git pull	//同步本地数据

